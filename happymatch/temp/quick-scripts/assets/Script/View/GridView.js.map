{"version":3,"sources":["GridView.js"],"names":["cc","Class","extends","Component","properties","aniPre","default","type","Prefab","effectLayer","Node","audioUtils","AudioUtils","onLoad","setListener","lastTouchPos","Vec2","isCanMove","isInPlayAni","setController","controller","initWithCellModels","cellsModels","cellViews","i","j","aniView","instantiate","parent","node","cellViewScript","getComponent","initWithModel","on","EventType","TOUCH_START","eventTouch","touchPos","getLocation","cellPos","convertTouchPosToCell","console","log","changeModels","selectCell","length","TOUCH_MOVE","startTouchPos","getStartLocation","startCellPos","x","y","TOUCH_END","TOUCH_CANCEL","pos","convertToNodeSpace","GRID_PIXEL_WIDTH","GRID_PIXEL_HEIGHT","Math","floor","CELL_WIDTH","CELL_HEIGHT","v2","updateView","newCellViewInfo","model","viewInfo","findViewByModel","view","cellScript","isDeath","push","forEach","ele","updateSelect","setSelect","getPlayAniTime","maxTime","cmd","playTime","keepTime","getStep","effectsQueue","reduce","maxValue","efffectCmd","max","step","disableTouch","time","runAction","sequence","delayTime","callFunc","playContinuousMatch","result","playEffect","cleanCmd","playSwap","playClick","playEffects"],"mappings":"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","file":"GridView.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\View","sourcesContent":["import { CELL_WIDTH, CELL_HEIGHT, GRID_PIXEL_WIDTH, GRID_PIXEL_HEIGHT, ANITIME } from '../Model/ConstValue';\n\nimport AudioUtils from \"../Utils/AudioUtils\";\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n\n        // 记录所有预设动物元素\n        aniPre: {\n            default: [],\n            type: [cc.Prefab]\n        },\n        effectLayer: {\n            default: null,\n            type: cc.Node\n        },\n        audioUtils: {\n            type: AudioUtils,\n            default: null\n        }\n\n    },\n\n\n    // use this for initialization\n    onLoad: function () {\n        this.setListener(); // 所有事件监听\n        this.lastTouchPos = cc.Vec2(-1, -1);\n        this.isCanMove = true;\n        this.isInPlayAni = false; // 是否在播放中\n    },\n    setController: function (controller) {\n        this.controller = controller;\n    },\n\n    initWithCellModels: function (cellsModels) {\n        this.cellViews = [];\n        for (var i = 1; i <= 9; i++) {\n            this.cellViews[i] = [];\n            for (var j = 1; j <= 9; j++) {\n                var type = cellsModels[i][j].type;\n                var aniView = cc.instantiate(this.aniPre[type]);\n                aniView.parent = this.node;\n                var cellViewScript = aniView.getComponent(\"CellView\");\n                cellViewScript.initWithModel(cellsModels[i][j]);\n                this.cellViews[i][j] = aniView;\n            }\n        }\n    },\n    setListener: function () {\n        // 添加点击事件\n        this.node.on(cc.Node.EventType.TOUCH_START, function (eventTouch) {\n            if (this.isInPlayAni) {//播放动画中，不允许点击\n                return true;\n            }\n            // 获取点击位置，通过点击位置推出点击元素\n            var touchPos = eventTouch.getLocation();\n            var cellPos = this.convertTouchPosToCell(touchPos);\n            console.log(touchPos, cellPos)\n            if (cellPos) {\n                var changeModels = this.selectCell(cellPos);\n                this.isCanMove = changeModels.length < 3;\n            }\n            else {\n                this.isCanMove = false;\n            }\n            return true;\n        }, this);\n        // 滑动操作逻辑\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (eventTouch) {\n            if (this.isCanMove) {\n                var startTouchPos = eventTouch.getStartLocation();\n                var startCellPos = this.convertTouchPosToCell(startTouchPos);\n                var touchPos = eventTouch.getLocation();\n                var cellPos = this.convertTouchPosToCell(touchPos);\n                if (startCellPos.x != cellPos.x || startCellPos.y != cellPos.y) {\n                    this.isCanMove = false;\n                    var changeModels = this.selectCell(cellPos);\n                }\n            }\n        }, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, function (eventTouch) {\n            // console.log(\"1111\");\n        }, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, function (eventTouch) {\n            // console.log(\"1111\");\n        }, this);\n    },\n    // 根据点击的像素位置，转换成网格中的位置\n    convertTouchPosToCell: function (pos) {\n        pos = this.node.convertToNodeSpace(pos);\n        if (pos.x < 0 || pos.x >= GRID_PIXEL_WIDTH || pos.y < 0 || pos.y >= GRID_PIXEL_HEIGHT) {\n            return false;\n        }\n        var x = Math.floor(pos.x / CELL_WIDTH) + 1;\n        var y = Math.floor(pos.y / CELL_HEIGHT) + 1;\n        return cc.v2(x, y);\n    },\n    // 移动格子\n    updateView: function (changeModels) {\n        let newCellViewInfo = [];\n        for (var i in changeModels) {\n            var model = changeModels[i];\n            var viewInfo = this.findViewByModel(model);\n            var view = null;\n            // 如果原来的cell不存在，则新建\n            if (!viewInfo) {\n                var type = model.type;\n                var aniView = cc.instantiate(this.aniPre[type]);\n                aniView.parent = this.node;\n                var cellViewScript = aniView.getComponent(\"CellView\");\n                cellViewScript.initWithModel(model);\n                view = aniView;\n            }\n            // 如果已经存在\n            else {\n                view = viewInfo.view;\n                this.cellViews[viewInfo.y][viewInfo.x] = null;\n            }\n            var cellScript = view.getComponent(\"CellView\");\n            cellScript.updateView();// 执行移动动作\n            if (!model.isDeath) {\n                newCellViewInfo.push({\n                    model: model,\n                    view: view\n                });\n            }\n        }\n        // 重新标记this.cellviews的信息\n        newCellViewInfo.forEach(function (ele) {\n            let model = ele.model;\n            this.cellViews[model.y][model.x] = ele.view;\n        }, this);\n    },\n    // 显示选中的格子背景\n    updateSelect: function (pos) {\n        for (var i = 1; i <= 9; i++) {\n            for (var j = 1; j <= 9; j++) {\n                if (this.cellViews[i][j]) {\n                    var cellScript = this.cellViews[i][j].getComponent(\"CellView\");\n                    if (pos.x == j && pos.y == i) {\n                        cellScript.setSelect(true);\n                    }\n                    else {\n                        cellScript.setSelect(false);\n                    }\n\n                }\n            }\n        }\n\n    },\n    /**\n     * 根据cell的model返回对应的view\n     */\n    findViewByModel: function (model) {\n        for (var i = 1; i <= 9; i++) {\n            for (var j = 1; j <= 9; j++) {\n                if (this.cellViews[i][j] && this.cellViews[i][j].getComponent(\"CellView\").model == model) {\n                    return { view: this.cellViews[i][j], x: j, y: i };\n                }\n            }\n        }\n        return null;\n    },\n    getPlayAniTime: function (changeModels) {\n        if (!changeModels) {\n            return 0;\n        }\n        var maxTime = 0;\n        changeModels.forEach(function (ele) {\n            ele.cmd.forEach(function (cmd) {\n                if (maxTime < cmd.playTime + cmd.keepTime) {\n                    maxTime = cmd.playTime + cmd.keepTime;\n                }\n            }, this)\n        }, this);\n        return maxTime;\n    },\n    // 获得爆炸次数， 同一个时间算一个\n    getStep: function (effectsQueue) {\n        if (!effectsQueue) {\n            return 0;\n        }\n        return effectsQueue.reduce(function (maxValue, efffectCmd) {\n            return Math.max(maxValue, efffectCmd.step || 0);\n        }, 0);\n    },\n    //一段时间内禁止操作\n    disableTouch: function (time, step) {\n        if (time <= 0) {\n            return;\n        }\n        this.isInPlayAni = true;\n        this.node.runAction(cc.sequence(cc.delayTime(time), cc.callFunc(function () {\n            this.isInPlayAni = false;\n            this.audioUtils.playContinuousMatch(step);\n        }, this)));\n    },\n    // 正常击中格子后的操作\n    selectCell: function (cellPos) {\n        var result = this.controller.selectCell(cellPos); // 直接先丢给model处理数据逻辑\n        var changeModels = result[0]; // 有改变的cell，包含新生成的cell和生成马上摧毁的格子\n        var effectsQueue = result[1]; //各种特效\n        this.playEffect(effectsQueue);\n        this.disableTouch(this.getPlayAniTime(changeModels), this.getStep(effectsQueue));\n        this.updateView(changeModels);\n        this.controller.cleanCmd();\n        if (changeModels.length >= 2) {\n            this.updateSelect(cc.v2(-1, -1));\n            this.audioUtils.playSwap();\n        }\n        else {\n            this.updateSelect(cellPos);\n            this.audioUtils.playClick();\n        }\n        return changeModels;\n    },\n    playEffect: function (effectsQueue) {\n        this.effectLayer.getComponent(\"EffectLayer\").playEffects(effectsQueue);\n    }\n\n\n\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"]}