{"version":3,"sources":["CellView.js"],"names":["cc","Class","extends","Component","properties","defaultFrame","default","type","SpriteFrame","onLoad","isSelect","initWithModel","model","x","startX","y","startY","node","CELL_WIDTH","CELL_HEIGHT","animation","getComponent","Animation","status","CELL_STATUS","COMMON","stop","play","updateView","cmd","length","actionArray","curTime","i","playTime","delay","delayTime","push","action","pos","move","moveTo","ANITIME","TOUCH_MOVE","v2","BIRD","BOMB_BIRD_DELAY","callFunc","destroy","isVisible","opacity","rotateRight","rotateBy","rotateLeft","repeat","sequence","keepTime","runAction","setSelect","flag","bg","getChildByName","Sprite","spriteFrame","CLICK","active"],"mappings":"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","file":"CellView.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\View","sourcesContent":["import {CELL_STATUS, CELL_WIDTH, CELL_HEIGHT, ANITIME} from '../Model/ConstValue';\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,      // The default value will be used only when the component attaching\n        //                           to a node for the first time\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        defaultFrame:{\n            default: null,\n            type: cc.SpriteFrame\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        //this.model = null;\n        this.isSelect = false;\n    },\n    initWithModel: function(model){\n        this.model = model;\n        var x = model.startX;\n        var y = model.startY;\n        this.node.x = CELL_WIDTH * (x - 0.5);\n        this.node.y = CELL_HEIGHT * (y - 0.5);\n        var animation  = this.node.getComponent(cc.Animation);\n        if (model.status == CELL_STATUS.COMMON){\n            animation.stop();\n        } \n        else{\n            animation.play(model.status);\n        }\n    },\n    // 执行移动动作\n    updateView: function(){\n        var cmd = this.model.cmd;\n        if(cmd.length <= 0){\n            return ;\n        }\n        var actionArray = [];\n        var curTime = 0;\n        for(var i in cmd){\n            if( cmd[i].playTime > curTime){\n                var delay = cc.delayTime(cmd[i].playTime - curTime);\n                actionArray.push(delay);\n            }\n            if(cmd[i].action == \"moveTo\"){\n                var x = (cmd[i].pos.x - 0.5) * CELL_WIDTH;\n                var y = (cmd[i].pos.y - 0.5) * CELL_HEIGHT;\n                var move = cc.moveTo(ANITIME.TOUCH_MOVE, cc.v2(x,y));\n                actionArray.push(move);\n            }\n            else if(cmd[i].action == \"toDie\"){\n                if(this.status == CELL_STATUS.BIRD){\n                    let animation = this.node.getComponent(cc.Animation);\n                    animation.play(\"effect\");\n                    actionArray.push(cc.delayTime(ANITIME.BOMB_BIRD_DELAY));\n                }\n                var callFunc = cc.callFunc(function(){\n                    this.node.destroy();\n                },this);\n                actionArray.push(callFunc);\n            }\n            else if(cmd[i].action == \"setVisible\"){\n                let isVisible = cmd[i].isVisible;\n                actionArray.push(cc.callFunc(function(){\n                    if(isVisible){\n                        this.node.opacity = 255;\n                    }\n                    else{\n                        this.node.opacity = 0;\n                    }\n                },this));\n            }\n            else if(cmd[i].action == \"toShake\"){\n                let rotateRight = cc.rotateBy(0.06,30);\n                let rotateLeft = cc.rotateBy(0.12, -60);\n                actionArray.push(cc.repeat(cc.sequence(rotateRight, rotateLeft, rotateRight), 2));\n            }\n            curTime = cmd[i].playTime + cmd[i].keepTime;\n        }\n        /**\n         * 智障的引擎设计，一群SB\n         */\n        if(actionArray.length == 1){\n            this.node.runAction(actionArray[0]);\n        }\n        else{\n            this.node.runAction(cc.sequence(...actionArray));\n        }\n\n    },\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n    setSelect: function(flag){\n        var animation = this.node.getComponent(cc.Animation);\n        var bg = this.node.getChildByName(\"select\");\n        if(flag == false && this.isSelect && this.model.status == CELL_STATUS.COMMON){\n            animation.stop();\n            this.node.getComponent(cc.Sprite).spriteFrame = this.defaultFrame;\n        }\n        else if(flag && this.model.status == CELL_STATUS.COMMON){\n            animation.play(CELL_STATUS.CLICK);\n        }\n        else if(flag && this.model.status == CELL_STATUS.BIRD){\n            animation.play(CELL_STATUS.CLICK);\n        }\n        bg.active = flag; \n        this.isSelect = flag;\n    }\n});\n"]}