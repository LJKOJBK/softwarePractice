{"version":3,"sources":["GameController.js"],"names":["global","require","cc","Class","extends","Component","properties","grid","default","type","Node","timeLabel","Label","mask","onLoad","gameover","handleTimingModel","gameModel","GameModel","init","gridScript","getComponent","setController","initWithCellModels","getCells","selectCell","pos","cleanCmd","isTimingModel","timeLast","node","active","update","dt","string","Math","ceil"],"mappings":";;;;;;AAAA;;;;;;AACA,IAAIA,SAASC,QAAQ,cAAR,CAAb;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,cAAK;AACDC,qBAAS,IADR;AAEDC,kBAAMP,GAAGQ;AAFR,SAXG;AAeRC,mBAAW;AACPH,qBAAS,IADF;AAEPC,kBAAMP,GAAGU;AAFF,SAfH;AAmBRC,cAAM;AACFL,qBAAS,IADP;AAEFC,kBAAMP,GAAGQ;AAFP;AAnBE,KAHP;;AA4BL;AACAI,YAAQ,kBAAY;AAChB,aAAKC,QAAL,GAAgB,KAAhB;AACA,aAAKC,iBAAL,GAFgB,CAEU;AAC1B,aAAKC,SAAL,GAAiB,IAAIC,mBAAJ,EAAjB;AACA,aAAKD,SAAL,CAAeE,IAAf,CAAoB,CAApB;AACA,YAAIC,aAAa,KAAKb,IAAL,CAAUc,YAAV,CAAuB,UAAvB,CAAjB;AACAD,mBAAWE,aAAX,CAAyB,IAAzB;AACAF,mBAAWG,kBAAX,CAA8B,KAAKN,SAAL,CAAeO,QAAf,EAA9B;AACH,KArCI;;AAuCLC,gBAAY,oBAASC,GAAT,EAAa;AACrB,eAAO,KAAKT,SAAL,CAAeQ,UAAf,CAA0BC,GAA1B,CAAP;AACH,KAzCI;;AA2CLC,cAAU,oBAAU;AAChB,aAAKV,SAAL,CAAeU,QAAf;AACH,KA7CI;;AA+CLX,uBAAmB,6BAAW;AAC1B,aAAKY,aAAL,GAAsB5B,OAAOS,IAAP,IAAe,CAArC;AACA,YAAG,CAAC,KAAKmB,aAAT,EAAwB;;AAExB,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKlB,SAAL,CAAemB,IAAf,CAAoBC,MAApB,GAA6B,IAA7B;AACH,KArDI;;AAuDL;AACAC,YAAQ,gBAAUC,EAAV,EAAc;AAClB,YAAG,KAAKL,aAAL,IAAsB,CAAC,KAAKb,QAA/B,EAAyC;AACrC,iBAAKc,QAAL,IAAiBI,EAAjB;AACA,iBAAKtB,SAAL,CAAeuB,MAAf,GAAwBC,KAAKC,IAAL,CAAU,KAAKP,QAAf,CAAxB;AACA,gBAAG,KAAKA,QAAL,IAAiB,CAApB,EAAuB;AACnB,qBAAKd,QAAL,GAAgB,IAAhB;AACA,qBAAKF,IAAL,CAAUkB,MAAV,GAAmB,IAAnB;AACH;AACJ;AACJ;AAjEI,CAAT","file":"GameController.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Controller","sourcesContent":["import GameModel from \"../Model/GameModel\";\r\nlet global = require('../Global.js');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        grid:{\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        timeLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        mask: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this.gameover = false\r\n        this.handleTimingModel()  // 处理与计时模式有关的模式\r\n        this.gameModel = new GameModel();\r\n        this.gameModel.init(4);\r\n        var gridScript = this.grid.getComponent(\"GridView\");\r\n        gridScript.setController(this);\r\n        gridScript.initWithCellModels(this.gameModel.getCells());\r\n    },\r\n\r\n    selectCell: function(pos){\r\n        return this.gameModel.selectCell(pos);\r\n    },\r\n\r\n    cleanCmd: function(){\r\n        this.gameModel.cleanCmd();\r\n    },\r\n\r\n    handleTimingModel: function() {\r\n        this.isTimingModel = (global.type == 1)\r\n        if(!this.isTimingModel) return \r\n        \r\n        this.timeLast = 60\r\n        this.timeLabel.node.active = true\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this.isTimingModel && !this.gameover) {\r\n            this.timeLast -= dt\r\n            this.timeLabel.string = Math.ceil(this.timeLast)\r\n            if(this.timeLast <= 0) {\r\n                this.gameover = true\r\n                this.mask.active = true\r\n            }\r\n        }\r\n    }, \r\n});\r\n"]}