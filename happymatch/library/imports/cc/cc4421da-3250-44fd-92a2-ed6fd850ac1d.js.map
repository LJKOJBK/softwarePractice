{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\Model/assets\\Script\\Model\\GameModel.js"],"names":["GameModel","cells","cellBgs","lastPos","cc","v2","cellTypeNum","cellCreateType","setCellTypeNum","i","GRID_WIDTH","j","GRID_HEIGHT","CellModel","result","init","getRandomCellType","checkPoint","length","setXY","setStartXY","data","x","y","checkWithDirection","direction","queue","vis","push","front","point","cellModel","tmpX","tmpY","type","rowResult","call","colResult","newCellStatus","CELL_STATUS","BIRD","WRAP","LINE","COLUMN","tmp","concat","forEach","newEle","flag","oldEle","printStr","console","log","pos","changeModels","effectsQueue","delta","Math","abs","curClickCell","lastClickCell","exchangeCell","result1","result2","curTime","pushToChangeModels","isCanBomb","status","COMMON","moveToAndBack","moveTo","ANITIME","TOUCH_MOVE","processCrush","cycleCount","bombModels","pos1","pos2","model1","model2","bombModel","newCellType","model","crushCell","createNewCell","processBomb","DIE","down","CELL_TYPE","setStatus","setVisible","newCheckPoint","curRow","k","count","indexOf","cmd","num","createTypeList","CELL_BASENUM","index","floor","random","newBombModel","bombTime","BOMB_DELAY","addRowBomb","addColBomb","crushType","BOMB_BIRD_DELAY","playTime","step","action","needShake","toShake","shakeTime","DIE_SHAKE","toDie","addCrushEffect"],"mappings":"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","file":"GameModel.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Model","sourcesContent":["import CellModel from \"./CellModel\";\r\nimport { CELL_TYPE, CELL_BASENUM, CELL_STATUS, GRID_WIDTH, GRID_HEIGHT, ANITIME } from \"./ConstValue\";\r\n\r\nexport default class GameModel {\r\n    constructor() {\r\n        this.cells = null;      // 记录grid上所有的格子的数组\r\n        this.cellBgs = null;\r\n        this.lastPos = cc.v2(-1, -1);\r\n        this.cellTypeNum = 5;   // 默认动物数\r\n        this.cellCreateType = []; // 生成动物的种类，如有4种动物，数组为[1, 2, 3, 4]\r\n    }\r\n\r\n    // 初始化所有的格子\r\n    init(cellTypeNum) {\r\n        this.cells = [];\r\n        this.setCellTypeNum(cellTypeNum || this.cellTypeNum);\r\n        for (var i = 1; i <= GRID_WIDTH; i++) {\r\n            this.cells[i] = [];\r\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\r\n                this.cells[i][j] = new CellModel();\r\n            }\r\n        }\r\n\r\n        for (var i = 1; i <= GRID_WIDTH; i++) {\r\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\r\n                let result = []\r\n                do {\r\n                    this.cells[i][j].init(this.getRandomCellType());\r\n                    result = this.checkPoint(j, i)[0];\r\n                } while(result.length > 2);\r\n\r\n                this.cells[i][j].setXY(j, i);\r\n                this.cells[i][j].setStartXY(j, i);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initWithData(data) {\r\n        // to do\r\n    }\r\n\r\n    checkPoint(x, y) {\r\n        // 给定一个坐标和要检查的方向，返回方向上包括自己在内同类元素的坐标  @returns: [cc.v2(), ...]\r\n        let checkWithDirection = function (x, y, direction) {\r\n            let queue = [];\r\n            let vis = [];   // 如果当前格子已被遍历过设为true\r\n            vis[x + y * 9] = true;\r\n            queue.push(cc.v2(x, y));\r\n            let front = 0;\r\n            while (front < queue.length) {\r\n                //let direction = [cc.v2(0, -1), cc.v2(0, 1), cc.v2(1, 0), cc.v2(-1, 0)];\r\n                let point = queue[front];\r\n                let cellModel = this.cells[point.y][point.x];   // 当前要检测的格子\r\n                front++;\r\n                if (!cellModel) {\r\n                    continue;\r\n                }\r\n                for (let i = 0; i < direction.length; i++) {\r\n                    let tmpX = point.x + direction[i].x;\r\n                    let tmpY = point.y + direction[i].y;\r\n                    if (tmpX < 1 || tmpX > 9    // 不合理的位置\r\n                        || tmpY < 1 || tmpY > 9\r\n                        || vis[tmpX + tmpY * 9]\r\n                        || !this.cells[tmpY][tmpX]) {\r\n                        continue;\r\n                    }\r\n                    if (cellModel.type == this.cells[tmpY][tmpX].type) {\r\n                        vis[tmpX + tmpY * 9] = true;\r\n                        queue.push(cc.v2(tmpX, tmpY));\r\n                    }\r\n                }\r\n            }\r\n            return queue;\r\n        }\r\n        let rowResult = checkWithDirection.call(this, x, y, [cc.v2(1, 0), cc.v2(-1, 0)]);   // 同一行相同个数\r\n        let colResult = checkWithDirection.call(this, x, y, [cc.v2(0, -1), cc.v2(0, 1)]);   // 同一列相同个数\r\n        let result = [];\r\n        let newCellStatus = \"\";\r\n        if (rowResult.length >= 5 || colResult.length >= 5) {\r\n            newCellStatus = CELL_STATUS.BIRD;   // 行列有超过五个生成魔力鸟（种类消除）\r\n        } else if (rowResult.length >= 3 && colResult.length >= 3) {\r\n            newCellStatus = CELL_STATUS.WRAP;   // 行列同时超过三个生成区域消除\r\n        } else if (rowResult.length >= 4) {\r\n            newCellStatus = CELL_STATUS.LINE;   // 生成行消除\r\n        } else if (colResult.length >= 4) {\r\n            newCellStatus = CELL_STATUS.COLUMN; // 生成列消除\r\n        }\r\n\r\n        if (rowResult.length >= 3) {\r\n            result = rowResult;\r\n        }\r\n        if (colResult.length >= 3) {\r\n            let tmp = result.concat();\r\n            colResult.forEach(function (newEle) {\r\n                let flag = false;\r\n                tmp.forEach(function (oldEle) {\r\n                    if (newEle.x == oldEle.x && newEle.y == oldEle.y) {\r\n                        flag = true;\r\n                    }\r\n                }, this);\r\n                if (!flag) {\r\n                    result.push(newEle);\r\n                }\r\n            }, this);\r\n        }\r\n        return [result, newCellStatus, this.cells[y][x].type];\r\n    }\r\n\r\n    printInfo() {\r\n        for (var i = 1; i <= 9; i++) {\r\n            var printStr = \"\";\r\n            for (var j = 1; j <= 9; j++) {\r\n                printStr += this.cells[i][j].type + \" \";\r\n            }\r\n            console.log(printStr);\r\n        }\r\n    }\r\n\r\n    getCells() {\r\n        return this.cells;\r\n    }\r\n\r\n    // controller调用的主要入口\r\n    // 点击某个格子\r\n    selectCell(pos) {\r\n        this.changeModels = [];// 发生改变的model，将作为返回值，给view播动作\r\n        this.effectsQueue = []; // 动物消失，爆炸等特效\r\n        var lastPos = this.lastPos;\r\n        var delta = Math.abs(pos.x - lastPos.x) + Math.abs(pos.y - lastPos.y);\r\n        \r\n        if (delta != 1) { // 非相邻格子，直接返回\r\n            this.lastPos = pos;\r\n            return [[], []];\r\n        }\r\n        let curClickCell = this.cells[pos.y][pos.x]; // 获取当前点击的格子\r\n        let lastClickCell = this.cells[lastPos.y][lastPos.x]; // 上一次点击的格子\r\n        this.exchangeCell(lastPos, pos);    // 两个格子进行交换\r\n\r\n        var result1 = this.checkPoint(pos.x, pos.y)[0];\r\n        var result2 = this.checkPoint(lastPos.x, lastPos.y)[0];\r\n        this.curTime = 0; // 动画播放的当前时间\r\n        this.pushToChangeModels(curClickCell);\r\n        this.pushToChangeModels(lastClickCell);\r\n        let isCanBomb = (curClickCell.status != CELL_STATUS.COMMON && // 判断两个是否是特殊的动物\r\n            lastClickCell.status != CELL_STATUS.COMMON) ||\r\n            curClickCell.status == CELL_STATUS.BIRD ||\r\n            lastClickCell.status == CELL_STATUS.BIRD;\r\n        if (result1.length < 3 && result2.length < 3 && !isCanBomb) {//不会发生消除的情况\r\n            this.exchangeCell(lastPos, pos);\r\n            curClickCell.moveToAndBack(lastPos);\r\n            lastClickCell.moveToAndBack(pos);\r\n            this.lastPos = cc.v2(-1, -1);\r\n            return [this.changeModels];\r\n        }\r\n        else {\r\n            this.lastPos = cc.v2(-1, -1);\r\n            curClickCell.moveTo(lastPos, this.curTime);\r\n            lastClickCell.moveTo(pos, this.curTime);\r\n            var checkPoint = [pos, lastPos];\r\n            this.curTime += ANITIME.TOUCH_MOVE;\r\n            this.processCrush(checkPoint);\r\n            return [this.changeModels, this.effectsQueue];\r\n        }\r\n    }\r\n\r\n    // 消除\r\n    processCrush(checkPoint) {\r\n        let cycleCount = 0;\r\n        while (checkPoint.length > 0) {\r\n            let bombModels = [];\r\n            if (cycleCount == 0 && checkPoint.length == 2) { //特殊消除\r\n                let pos1 = checkPoint[0];\r\n                let pos2 = checkPoint[1];\r\n                let model1 = this.cells[pos1.y][pos1.x];\r\n                let model2 = this.cells[pos2.y][pos2.x];\r\n                if (model1.status == CELL_STATUS.BIRD || model2.status == CELL_STATUS.BIRD) {\r\n                    let bombModel = null;\r\n                    if (model1.status == CELL_STATUS.BIRD) {\r\n                        model1.type = model2.type;\r\n                        bombModels.push(model1);\r\n                    }\r\n                    else {\r\n                        model2.type = model1.type;\r\n                        bombModels.push(model2);\r\n                    }\r\n\r\n                }\r\n            }\r\n            for (var i in checkPoint) {\r\n                var pos = checkPoint[i];\r\n                if (!this.cells[pos.y][pos.x]) {\r\n                    continue;\r\n                }\r\n                var [result, newCellStatus, newCellType] = this.checkPoint(pos.x, pos.y);\r\n\r\n                if (result.length < 3) {\r\n                    continue;\r\n                }\r\n                for (var j in result) {\r\n                    var model = this.cells[result[j].y][result[j].x];\r\n                    this.crushCell(result[j].x, result[j].y, false, cycleCount);\r\n                    if (model.status != CELL_STATUS.COMMON) {\r\n                        bombModels.push(model);\r\n                    }\r\n                }\r\n                this.createNewCell(pos, newCellStatus, newCellType);\r\n\r\n            }\r\n            this.processBomb(bombModels, cycleCount);\r\n            this.curTime += ANITIME.DIE;\r\n            checkPoint = this.down();\r\n            cycleCount++;\r\n        }\r\n    }\r\n\r\n    //生成新cell\r\n    createNewCell(pos, status, type) {\r\n        if (status == \"\") {\r\n            return;\r\n        }\r\n        if (status == CELL_STATUS.BIRD) {\r\n            type = CELL_TYPE.BIRD\r\n        }\r\n        let model = new CellModel();\r\n        this.cells[pos.y][pos.x] = model\r\n        model.init(type);\r\n        model.setStartXY(pos.x, pos.y);\r\n        model.setXY(pos.x, pos.y);\r\n        model.setStatus(status);\r\n        model.setVisible(0, false);\r\n        model.setVisible(this.curTime, true);\r\n        this.changeModels.push(model);\r\n    }\r\n    // 下落\r\n    down() {\r\n        let newCheckPoint = [];\r\n        for (var i = 1; i <= GRID_WIDTH; i++) {\r\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\r\n                if (this.cells[i][j] == null) {\r\n                    var curRow = i;\r\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\r\n                        if (this.cells[k][j]) {\r\n                            this.pushToChangeModels(this.cells[k][j]);\r\n                            newCheckPoint.push(this.cells[k][j]);\r\n                            this.cells[curRow][j] = this.cells[k][j];\r\n                            this.cells[k][j] = null;\r\n                            this.cells[curRow][j].setXY(j, curRow);\r\n                            this.cells[curRow][j].moveTo(cc.v2(j, curRow), this.curTime);\r\n                            curRow++;\r\n                        }\r\n                    }\r\n                    var count = 1;\r\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\r\n                        this.cells[k][j] = new CellModel();\r\n                        this.cells[k][j].init(this.getRandomCellType());\r\n                        this.cells[k][j].setStartXY(j, count + GRID_HEIGHT);\r\n                        this.cells[k][j].setXY(j, count + GRID_HEIGHT);\r\n                        this.cells[k][j].moveTo(cc.v2(j, k), this.curTime);\r\n                        count++;\r\n                        this.changeModels.push(this.cells[k][j]);\r\n                        newCheckPoint.push(this.cells[k][j]);\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        this.curTime += ANITIME.TOUCH_MOVE + 0.3\r\n        return newCheckPoint;\r\n    }\r\n\r\n    pushToChangeModels(model) {\r\n        if (this.changeModels.indexOf(model) != -1) {\r\n            return;\r\n        }\r\n        this.changeModels.push(model);\r\n    }\r\n\r\n    cleanCmd() {\r\n        for (var i = 1; i <= GRID_WIDTH; i++) {\r\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\r\n                if (this.cells[i][j]) {\r\n                    this.cells[i][j].cmd = [];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    exchangeCell(pos1, pos2) {\r\n        // var tmpModel = this.cells[pos1.y][pos1.x];\r\n        [this.cells[pos1.y][pos1.x], this.cells[pos2.y][pos2.x]] = [this.cells[pos2.y][pos2.x], this.cells[pos1.y][pos1.x]];\r\n        // [this.cells[pos1.y][pos1.x].x, this.cells[pos1.y][pos1.x].y] = [pos1.x, pos1.y];\r\n        // this.cells[pos2.y][pos2.x] = tmpModel;\r\n        // [this.cells[pos2.y][pos2.x].x, this.cells[pos2.y][pos2.x].y] = [pos2.x, pos2.y];\r\n    }\r\n    // 设置种类\r\n    // Todo 改成乱序算法\r\n    setCellTypeNum(num) {\r\n        console.log(\"num = \", num);\r\n        this.cellTypeNum = num;\r\n        this.cellCreateType = [];\r\n        let createTypeList = this.cellCreateType;\r\n        for (let i = 1; i <= CELL_BASENUM; i++) {\r\n            createTypeList.push(i);\r\n        }\r\n        for (let i = 0; i < createTypeList.length; i++) {\r\n            let index = Math.floor(Math.random() * (CELL_BASENUM - i)) + i;\r\n            createTypeList[i], createTypeList[index] = createTypeList[index], createTypeList[i]\r\n        }\r\n    }\r\n    // 随要生成一个类型\r\n    getRandomCellType() {\r\n        var index = Math.floor(Math.random() * this.cellTypeNum);\r\n        return this.cellCreateType[index];\r\n    }\r\n    // TODO bombModels去重\r\n    processBomb(bombModels, cycleCount) {\r\n        while (bombModels.length > 0) {\r\n            let newBombModel = [];\r\n            let bombTime = ANITIME.BOMB_DELAY;\r\n            bombModels.forEach(function (model) {\r\n                if (model.status == CELL_STATUS.LINE) {\r\n                    for (let i = 1; i <= GRID_WIDTH; i++) {\r\n                        if (this.cells[model.y][i]) {\r\n                            if (this.cells[model.y][i].status != CELL_STATUS.COMMON) {\r\n                                newBombModel.push(this.cells[model.y][i]);\r\n                            }\r\n                            this.crushCell(i, model.y, false, cycleCount);\r\n                        }\r\n                    }\r\n                    this.addRowBomb(this.curTime, cc.v2(model.x, model.y));\r\n                }\r\n                else if (model.status == CELL_STATUS.COLUMN) {\r\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\r\n                        if (this.cells[i][model.x]) {\r\n                            if (this.cells[i][model.x].status != CELL_STATUS.COMMON) {\r\n                                newBombModel.push(this.cells[i][model.x]);\r\n                            }\r\n                            this.crushCell(model.x, i, false, cycleCount);\r\n                        }\r\n                    }\r\n                    this.addColBomb(this.curTime, cc.v2(model.x, model.y));\r\n                }\r\n                else if (model.status == CELL_STATUS.WRAP) {\r\n                    let x = model.x;\r\n                    let y = model.y;\r\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\r\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\r\n                            let delta = Math.abs(x - j) + Math.abs(y - i);\r\n                            if (this.cells[i][j] && delta <= 2) {\r\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\r\n                                    newBombModel.push(this.cells[i][j]);\r\n                                }\r\n                                this.crushCell(j, i, false, cycleCount);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (model.status == CELL_STATUS.BIRD) {\r\n                    let crushType = model.type\r\n                    if (bombTime < ANITIME.BOMB_BIRD_DELAY) {\r\n                        bombTime = ANITIME.BOMB_BIRD_DELAY;\r\n                    }\r\n                    if (crushType == CELL_TYPE.BIRD) {\r\n                        crushType = this.getRandomCellType();\r\n                    }\r\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\r\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\r\n                            if (this.cells[i][j] && this.cells[i][j].type == crushType) {\r\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\r\n                                    newBombModel.push(this.cells[i][j]);\r\n                                }\r\n                                this.crushCell(j, i, true, cycleCount);\r\n                            }\r\n                        }\r\n                    }\r\n                    //this.crushCell(model.x, model.y);\r\n                }\r\n            }, this);\r\n            if (bombModels.length > 0) {\r\n                this.curTime += bombTime;\r\n            }\r\n            bombModels = newBombModel;\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param {开始播放的时间} playTime \r\n     * @param {*cell位置} pos \r\n     * @param {*第几次消除，用于播放音效} step \r\n     */\r\n    addCrushEffect(playTime, pos, step) {\r\n        this.effectsQueue.push({\r\n            playTime,\r\n            pos,\r\n            action: \"crush\",\r\n            step\r\n        });\r\n    }\r\n\r\n    addRowBomb(playTime, pos) {\r\n        this.effectsQueue.push({\r\n            playTime,\r\n            pos,\r\n            action: \"rowBomb\"\r\n        });\r\n    }\r\n\r\n    addColBomb(playTime, pos) {\r\n        this.effectsQueue.push({\r\n            playTime,\r\n            pos,\r\n            action: \"colBomb\"\r\n        });\r\n    }\r\n\r\n    addWrapBomb(playTime, pos) {\r\n        // TODO\r\n    }\r\n    // cell消除逻辑\r\n    crushCell(x, y, needShake, step) {\r\n        let model = this.cells[y][x];\r\n        this.pushToChangeModels(model);\r\n        if (needShake) {\r\n            model.toShake(this.curTime)\r\n        }\r\n\r\n        let shakeTime = needShake ? ANITIME.DIE_SHAKE : 0;\r\n        model.toDie(this.curTime + shakeTime);\r\n        this.addCrushEffect(this.curTime + shakeTime, cc.v2(model.x, model.y), step);\r\n        this.cells[y][x] = null;\r\n    }\r\n\r\n}\r\n\r\n"]}